<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haiwang.logistics.mapper.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.haiwang.logistics.pojo.Staff" >
    <id column="staff_id" property="staffId" jdbcType="INTEGER" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_sex" property="staffSex" jdbcType="VARCHAR" />
    <result column="staff_birthday" property="staffBirthday" jdbcType="DATE" />
    <result column="staff_phone" property="staffPhone" jdbcType="VARCHAR" />
    <result column="staff_username" property="staffUsername" jdbcType="VARCHAR" />
    <result column="staff_password" property="staffPassword" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="firm_id" property="firmId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    staff_id, staff_name, staff_sex, staff_birthday, staff_phone, staff_username, staff_password,
    department_id, firm_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.haiwang.logistics.pojo.StaffExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where staff_id = #{staffId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staff
    where staff_id = #{staffId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.haiwang.logistics.pojo.StaffExample" >
    delete from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.haiwang.logistics.pojo.Staff" >
    insert into staff (staff_id, staff_name, staff_sex, 
      staff_birthday, staff_phone, staff_username, 
      staff_password, department_id, firm_id
      )
    values (#{staffId,jdbcType=INTEGER}, #{staffName,jdbcType=VARCHAR}, #{staffSex,jdbcType=VARCHAR}, 
      #{staffBirthday,jdbcType=DATE}, #{staffPhone,jdbcType=VARCHAR}, #{staffUsername,jdbcType=VARCHAR}, 
      #{staffPassword,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{firmId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.haiwang.logistics.pojo.Staff" >
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="staffName != null" >
        staff_name,
      </if>
      <if test="staffSex != null" >
        staff_sex,
      </if>
      <if test="staffBirthday != null" >
        staff_birthday,
      </if>
      <if test="staffPhone != null" >
        staff_phone,
      </if>
      <if test="staffUsername != null" >
        staff_username,
      </if>
      <if test="staffPassword != null" >
        staff_password,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="firmId != null" >
        firm_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staffName != null" >
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="staffSex != null" >
        #{staffSex,jdbcType=VARCHAR},
      </if>
      <if test="staffBirthday != null" >
        #{staffBirthday,jdbcType=DATE},
      </if>
      <if test="staffPhone != null" >
        #{staffPhone,jdbcType=VARCHAR},
      </if>
      <if test="staffUsername != null" >
        #{staffUsername,jdbcType=VARCHAR},
      </if>
      <if test="staffPassword != null" >
        #{staffPassword,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="firmId != null" >
        #{firmId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.haiwang.logistics.pojo.StaffExample" resultType="java.lang.Integer" >
    select count(*) from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update staff
    <set >
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.staffName != null" >
        staff_name = #{record.staffName,jdbcType=VARCHAR},
      </if>
      <if test="record.staffSex != null" >
        staff_sex = #{record.staffSex,jdbcType=VARCHAR},
      </if>
      <if test="record.staffBirthday != null" >
        staff_birthday = #{record.staffBirthday,jdbcType=DATE},
      </if>
      <if test="record.staffPhone != null" >
        staff_phone = #{record.staffPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.staffUsername != null" >
        staff_username = #{record.staffUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.staffPassword != null" >
        staff_password = #{record.staffPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.firmId != null" >
        firm_id = #{record.firmId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update staff
    set staff_id = #{record.staffId,jdbcType=INTEGER},
      staff_name = #{record.staffName,jdbcType=VARCHAR},
      staff_sex = #{record.staffSex,jdbcType=VARCHAR},
      staff_birthday = #{record.staffBirthday,jdbcType=DATE},
      staff_phone = #{record.staffPhone,jdbcType=VARCHAR},
      staff_username = #{record.staffUsername,jdbcType=VARCHAR},
      staff_password = #{record.staffPassword,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      firm_id = #{record.firmId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.haiwang.logistics.pojo.Staff" >
    update staff
    <set >
      <if test="staffName != null" >
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="staffSex != null" >
        staff_sex = #{staffSex,jdbcType=VARCHAR},
      </if>
      <if test="staffBirthday != null" >
        staff_birthday = #{staffBirthday,jdbcType=DATE},
      </if>
      <if test="staffPhone != null" >
        staff_phone = #{staffPhone,jdbcType=VARCHAR},
      </if>
      <if test="staffUsername != null" >
        staff_username = #{staffUsername,jdbcType=VARCHAR},
      </if>
      <if test="staffPassword != null" >
        staff_password = #{staffPassword,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="firmId != null" >
        firm_id = #{firmId,jdbcType=INTEGER},
      </if>
    </set>
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haiwang.logistics.pojo.Staff" >
    update staff
    set staff_name = #{staffName,jdbcType=VARCHAR},
      staff_sex = #{staffSex,jdbcType=VARCHAR},
      staff_birthday = #{staffBirthday,jdbcType=DATE},
      staff_phone = #{staffPhone,jdbcType=VARCHAR},
      staff_username = #{staffUsername,jdbcType=VARCHAR},
      staff_password = #{staffPassword,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      firm_id = #{firmId,jdbcType=INTEGER}
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>

  <resultMap id="staffmap" type="com.haiwang.logistics.pojo.Staff">
    <id column="staff_id" property="staffId" jdbcType="INTEGER"/>
    <result column="staff_name" property="staffName" jdbcType="VARCHAR"/>
    <result column="staff_sex" property="staffSex" jdbcType="VARCHAR"/>
    <result column="staff_birthday" property="staffBirthday" jdbcType="DATE"/>
    <result column="staff_phone" property="staffPhone" jdbcType="VARCHAR"/>
    <result column="staff_username" property="staffUsername"/>
    <result column="staff_password" property="staffPassword" jdbcType="VARCHAR"/>
    <association property="department" javaType="com.haiwang.logistics.pojo.Department">
      <id property="departmentId" column="department_id"></id>
      <result property="departmentName" column="department_name"></result>
    </association>
    <association property="firm" javaType="com.haiwang.logistics.pojo.Firm">
      <id property="firmId" column="firm_id"></id>
      <result property="firmName" column="firm_name"></result>
    </association>
  </resultMap>
  <select id="getStaffAllByExample" resultMap="staffmap" parameterType="com.haiwang.logistics.pojo.StaffExample">
    SELECT staff_id,staff_name,staff_sex,staff_birthday,staff_phone,staff_username,staff_password,s.department_id
    department_id,department_name,s.firm_id firm_id,firm_name FROM staff s
    INNER JOIN firm f on s.firm_id=f.firm_id
    INNER JOIN department d ON s.department_id=d.department_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="getStaff1" resultMap="staffmap">
SELECT staff_id,staff_name,staff_sex,staff_birthday,staff_phone,staff_username,staff_password,s.department_id
department_id,department_name,s.firm_id firm_id,firm_name FROM staff s
INNER JOIN firm f on s.firm_id=f.firm_id
INNER JOIN department d ON s.department_id=d.department_id
WHERE department_name=#{arg0}
AND firm_name LIKE #{arg1}
  </select>

</mapper>